() => {
  const log = this.createLogger("openTestView");
  const info = this.createLogger("openTestView", console.info);
  const error = this.createLogger("openTestView", console.error);
  log(0, ["()"]);

  // Check whether we have all the data in place
  if (!this.splitView) {
    error(1, ["this.splitView is missing"]);
    return;
  }

  const TabbedViewTemplate = this.tabbedViewTemplate;
  log(1, ["TabbedViewTemplate is", TabbedViewTemplate]);
  if (!TabbedViewTemplate) {
    error(1, ["this.tabbedViewTemplate is missing"]);
    return;
  }

  // Instance the tabbed view in an easy-to-clear storage object and point it with the splitView
  const tabbedView = new TabbedViewTemplate({
    name: "Tabbed View Instance",
    owner: this,
  });
  log(1, ["TabbedView instance is", tabbedView]);

  info(1, ["TODO: Register the TabbedView instance as a listener to focus / open signals from the TreeView"]);
  tabbedView.registerListener(tabbedView.tabClosed, this, "removeEmptyTabbedView");

  // Open a new split view to the Tabbed View Instance
  this.splitView.openView({ content: tabbedView });

  log(1, ["Done"]);
};